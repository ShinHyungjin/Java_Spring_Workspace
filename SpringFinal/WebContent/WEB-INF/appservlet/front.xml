<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd">

<!-- 
		1)SimpleUrlHandlerMapping
		2)BeanNameUrlHandlerMapping
		3)DefaultAnnotationHandlerMapping (상위버전으로 갈수록 해당 방식이 주로 사용됨)
		   - 말 그대로 기본값으로써 딱히 개발자가 지정 안해도 기본으로 사용되는 매핑방식
 -->

<!-- Mapping 등록 @Controller , @RequestMapping -->
<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"></bean>

<!-- Controller 등록을 해야하지만 Annotation이 붙은 클래스를 검색해서 Spring에서 인스턴스를 자동으로 올리자! = 간소화 -->
<context:component-scan base-package="com.study.springfinal.*"></context:component-scan>

<!-- 설정파일을 간소화 시키기 위해 Scan을 사용하고있지만 bean 태그를 사용하지 않음으로써 bean과 bean간의 weaving(엮기)가 불가능해짐 ex)DAO와 컨트롤러
		해결책) 자바코드안의 @을 적극 활용 @Autowired
		사용자 정의 클래스는 @Component
-->

<!-- 파일 업로드 처리 빈 등록 -->
<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

<!-- ViewResolver 등록 -->
<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/" p:suffix=".jsp" />

</beans>
